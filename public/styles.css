:root {
  /* Menu */
  --menu-width: min(250px, 50vw);
  --main-width: 725px;
  /* see @media (min-width: 975px) in media-queries.css */

  --ratio: 0.25;
  --icon-size: calc(var(--ratio) * var(--menu-width));
  --list-width: calc(var(--menu-width) - 1rem);
  --repo-size: 118px;
  --items-height: calc(100vh - var(--icon-size) - var(--repo-size));
  --svg-margin: 0.4em;
  --darkly: #222e;
  --border: #888;
  --selected: #000;

  /* Paging */
  --pad: calc(var(--icon-size) / 7);
  --size: calc(var(--icon-size) - 4 * var(--pad));
  --dim: 0.5;
  --page-bg: #fff2;
  --hover: #fff3;

  /* Body */
  --black:     #000;
  --darker:    #080808;
  --dark:      #222;
  --skip:      #666;
  --mid:       #888;
  --light:     #ddd;
  --lighter:   #fff1;
  --bright:    #fff;

  /* Details */
  --alert:     #800;
  --challenge: #609;
  --env:       #069;
  --note:      #040;
  --pivot:     #03c;
  --question:  #907;
  --solution:  #4069;
  --story:     #088;
  --tip:       #960;
  --tldr:      #004;
  --trouble:   #c60;
  --warn:      #630;
  --github:    #060;
  --gitbor:    #080;

  --min-width: calc(var(--main-width) + var(--menu-width));

  /* Links */
  --link-color: #fc9;
  --link-visited: #fdb;

  /* Footer */
  --footer-height: 2em;
  --footer-top: calc(100vh - var(--footer-height))
}

body {
  background-color: var(--dark);
  color: var(--light);
  margin: 0;
  font-family:Arial, Helvetica, sans-serif;
  counter-reset: fig menu;
}

main {
  position: relative;
  max-width: var(--main-width);
  min-height: 100vh;
  margin: 0 auto;
  padding: 0 1em;

  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: auto;
}

header {
  text-align: center;
  border-bottom: 1px solid var(--mid);

  & h1 {
    margin: 0.75em 0 0;
  }
  & h3 {
    margin-top: 0;

    &::empty {
      height: 0;
    }
  }
  & h4 {
    position: absolute;
    top: 6px;
    right: 36px;
    margin: 0;
    opacity: 0.2;
    text-decoration: none;
  }

  a {
    position: absolute;
    right: 0;

    img {
      width: 1.8em;
      opacity: 0.2;

      &:hover {
        opacity: 1;
      }
    }
  }
}

/* Show non last-of-type sections after last-of-type */
section {
  order: 1;
}
section:last-of-type {
  order: 0
}

body:has(#pages:checked) {
  /* Hide all sections, including last if there's a :target... */
  section,
  section:target ~ section:last-of-type {
    height: 0;
    width: 0;
    overflow: hidden;
  }

  /* ...but show the :target if there is one, or last, if not */
  section:target,
  section:last-of-type {
    height: auto;
    width: auto;
    overflow: auto;
  }
}

/* Ensure short content is pushed to the top */
main > .spacer {
  order: 1;
  flex: 1;
}

p,
li {
  line-height: 1.75em
}

footer {
  height: var(--footer-height);
  margin: var(--footer-height) 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  order: 2;

  & button {
    display: inline-block;
    background-color: transparent;
    color: inherit;
    box-sizing: border-box;
    border: 1px outset #000;
    border-radius: 0.2em;
    width: var(--footer-height);
    height: var(--footer-height);
    cursor: pointer;

    &:hover {
      border-color: #6c6;
    }

    &:active {
      border-style: inset;
      background-color: #000; /* only applies to #previous button */
    }

    &:disabled {
      background-color: transparent;
      opacity: 0.2;
      pointer-events: none; /* to prevent reactions to :hover */
    }
  }

  & span {
    -webkit-user-select: none; /* Safari */
            user-select: none;
  }

  & button:hover + span {
    color: var(--bright);
  }
}

/* No menu or footer if no sections */
main:not(:has(section)),
body:not(:has(#pages:checked)) {
  & ~ #menu,
  footer {
    display: none;
  }

  & {
    box-shadow: 0 0 16px #0003;
  }
}

/* CONTENT // CONTENT // CONTENT // CONTENT // CONTENT */

h1 {
  font-size: 2em;
  text-align: center;
}
/* h2,
h4 {
  text-decoration: underline;
}

h5 {
  font-size: 1rem;
  font-weight: bold;
  font-style: italic;
} */

figure {
  margin: 0;

  figcaption {
    margin: 1em 0 3em;
    text-align: center;
    text-decoration: underline;

    &::before {
      counter-increment: fig;
      content: "Figure " counter(fig) ": ";
    }
  }
}

pre.wrap,
pre.wrap code,
pre.wrap code span
{
  white-space: pre-wrap !important; /* override Prism */
}


code b,
code b * {
  font-weight: bold;
  filter: brightness(1.1);
}


code i,
code i * {
  /* color: #776!important; */
  filter: brightness(0.9);
  font-style: normal;
}

code:not([class]) {
  background-color: #fff3;
  padding: 0 0.2em;
  font-size: 14px;
  white-space: pre
}

h2, h3 {
  margin-top: 2em;
}

h2 code:not([class]), /* :not([class]) needed for specificity */
h3 code:not([class]),
h4 code:not([class]) {
  font-size: 1.2em;
}

aside s,
code s,
code s * {
  color: #c00!important;
  text-decoration: line-through;
  font-style: italic;
  filter: none;
  text-decoration-thickness: 2px;

  /* Don't let the user copy deleted text */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

code u,
code u * {
  background-color: #fff3;
  text-decoration: none;
}

aside,
blockquote {
  background-color: #020;
  padding: 0.25em 1em;
  border-left: 1em solid #040;
  box-sizing: border-box;
}

blockquote {
  background-color: #5555;
  border-color: var(--lighter);
}

blockquote pre:has(code) {
  --bg: #333;
  background-color: var(--bg);
  padding: 0.5em;
}
blockquote pre code:not([id])
{
  /* background-color: var(--bg); */
  padding: 0;
}

aside.center {
  text-align: center;
  border-right: 1em solid;
}

/* aside:not([class]) code {
  background-color: #353;
} */

aside:not([class]) pre,
aside:not([class]) code {
  background-color: #030;
}

aside.vscode {
  background-color: #224;
  border-left: 1em solid #006;
}

aside.vscode pre,
aside.vscode code {
    background-color: #335;
}

aside.tip {
  background-color: #330;
  border-color: #973
}

aside.tip pre,
aside.tip p code {
    background-color: #440;
}

aside.warn {
  background-color: #320;
  border-color: #643
}

aside.alert {
  background-color: #200;
  border-color: #600;
}

aside.alert code {
  background-color: #633;
}

aside.question {
  background-color: #202;
  border-right: 1em solid;
  border-color: #606;
}

aside.question code {
  background-color: #525;
}

aside.question blockquote {
  background-color: #424;
  border-color: #525;
}

cite {
  display: block;
  margin-top: 0.5em;
  text-align: right;
}

li,
br {
  margin-bottom: 0.5em;
}

table {
  table-layout: fixed;
  border-collapse: collapse;
  border: 1px solid var(--light);

  th {
    padding: 0.5em;
    text-align: left;
  }
  td {
    padding: 0.5em;
    border-bottom: 0.5px solid var(--light);
  }
  th:last-child,
  td:last-child {
    border-left: 0.5px solid var(--light);
  }

  thead {
    border-bottom: 0.5px solid var(--light);
  }
}

img {
  display: block;
  margin: 0 auto;
  max-width: 100%;
}

/* LINKS / LINKS / LINKS / LINKS / LINKS / LINKS / LINKS */

a {
  color: var(--link-color);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

a:visited {
  color: var(--link-visited);
}

a.external {
  color: #9cf;
}

a.external span {
  display: inline-block;
  width: 12px;
  height: 12px;
  background-image: url("./images/external.svg");
  margin-left: 2px;
}

a.external:visited {
  color: #bdf;
}

a[download] {
  border: 1px outset black;
  border-radius: 0.5em;
  padding: 0.25em 0.5em;
}

/* Footer */

footer {
  span {
    cursor: pointer
  }

  /* The #next button must be listed before #next-name so that
    button:hover + span will work. But it must be displayed
    _after_ the name.
  */
  #next {
    background-color: #090; /* even when active: call to action */
    order: 1
  }

  /* Don't crowd the names against the buttons */
  #previous-name {
    margin-left: 0.5em
  }

  #next-name {
    margin-right: 0.5em
  }

  /* Push the previous-name and next-name spans apart */
  .spacer {
    flex: 1;
    order: 0;
  }
}

/* Ensure feedback aside on #intro page wraps nicely on all
   screen sizes
 */
#intro .feedback-wide,
#conclusion .feedback-wide {
  display: block
}
#intro .feedback-small,
#conclusion .feedback-small {
  display: none
}

/* Internal links */

button[data-name] {
  font-size: inherit;
  font-family: inherit;
  color: inherit;
  padding: 0;
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

button[data-name]:hover {
  color: #fff;
}

[name^=anchor] {
  background-color: transparent;
  transition: background-color 2000ms ease-out;
}

[name^=anchor].highlight {
  background-color: #666;
  transition: background-color 0ms;
}

/* MENU / MENU / MENU / MENU / MENU / MENU / MENU / MENU */


#menu-icon {
  position: fixed;
  width: var(--icon-size);
  height: var(--icon-size);
  stroke: #fff;
  top: 0;
  left: 0;
  transition-property: left, opacity;
  transition-duration: .3s, .1s;
  transition-timing-function: linear, ease-in-out;
  opacity: 0.2;
}

#menu-items {
  display: flex;
  flex-direction: column;
  margin-top: var(--icon-size);
  height: var(--items-height);
  overflow-y: auto;
  list-style-type: none;

  padding: 0 0.5em;
}

#menu {
  position: fixed;
  top: 0;
  left: calc(-1 * var(--menu-width)); /* offscreen by default */
  font-size: var(--menu-font-size);

  height: 100vh;
  width: var(--menu-width);
  background-color: var(--darkly);
  border-right: #000;
  box-shadow: 10px 10px 10px #0009;
  z-index: 99;

  transition: left .4s linear;


  &.open {
    left: 0;

    & #menu-icon {
      opacity: 0.8;
      left: calc(var(--menu-width) - var(--icon-size));
      transition-property: left, opacity;
      transition-delay: .1s, 0s;
      transition-timing-function: linear, ease-in-out;

      &:hover { /* boost specificiy */
        opacity: 1;
      }
    }
  }

  li {
    margin-top: 0.25em;
    border: var(--border) outset 1px;
    border-radius: 0.5em;
    color: var(--light);

    &:hover {
      color: var(--bright);
    }

    &.target {
      border-style: inset;
      background-color: var(--selected)
    }

    a {
      display: inline-block;
      padding: 0.25em 1em;
      box-sizing: border-box;

      width: 100%;
      text-decoration: none;
      color: inherit;
      -webkit-user-select: none; /* Safari */
              user-select: none;

      &::before {
        counter-increment: menu;
        content: counter(menu) ". ";
      }
    }
  }
}


div#repo {
  padding: 0.5em 0;
  border-top: 1px solid var(--mid);

  .feedback {
    text-decoration: underline;
  }
  img {
    height: var(--footer-height);
    width: var(--footer-height);
    margin: 0;
  }

  a {
    color: #fff;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    padding: 0;
    margin: 0.5em 0;
    overflow-y: visible;

    &.repo {
      background-color: var(--github);
      margin-top: 1em;
      padding: 0.5em 0;
      border: 1px solid var(--gitbor);
      border-radius: 0.5em;
    }
  }
}

.temp {
  color: #888;
}

#validate + label::before {
  content: "Show solution"
}

#validate + label + div pre {
  display: none;
  background: #202;
}

#validate:checked + label::before {
  content: "Hide solution"
}

#validate:checked + label + div pre {
  display: block
}


/* DETAILS / DETAILS / DETAILS / DETAILS / DETAILS / DETAILS */

details {
  --gap: 0.5rem;
  --nip: calc(var(--gap) * -1);
  --bg-color: #fff;
  border: 1px inset var(--bg-color);
  margin: 2em 0 1em;
  padding: var(--gap);
  overflow: auto;
  background-color: color-mix(
    in oklab,
    var(--bg-color),
    var(--darker)
  );

  &[open] {
    border-left-width: 0.25em;
    border-left-style: solid;
  }

  /* Don't number figures inside details, because they might
    be closed, which would upset the numbering system.
  */
  figcaption::before {
    content: "";
    counter-increment: fig 0;
  }

  summary {
    position: relative;
    font-size: 1.25em;
    height: 1.5em;
    font-weight: bold;
    padding: var(--gap);
    margin: var(--nip);
    background-color: var(--bg-color);
  }

  summary::after {
    display: inline-block;
    position: absolute;
    right: 0;
    width: 1.5em;
    margin-right: 0.5em ;
  }

  p:first-of-type {
    margin-top: 1.5em;
  }

  p:last-of-type {
    margin-bottom: var(--gap);
  }

  &.alert {
    --bg-color: var(--alert);

    & summary::after {
      content: url("svg/alert.svg");
    }
  }

  &.challenge {
    --bg-color: var(--challenge);

    & summary::after {
      content: url("svg/challenge.svg");
    }
  }

  &.solution {
    --bg-color: var(--solution);

    & summary::after {
      content: url("svg/solution.svg");
    }
  }

  &.env {
    --bg-color: var(--env);

    & summary::after {
      content: url("svg/env.svg");
    }
  }

  &.feedback {
    --bg-color: var(--github);

    & summary::after {
      content: url("svg/feedback.svg");
    }
  }

  &.note {
    --bg-color: var(--note);

    & summary::after {
      content: url("svg/note.svg");
    }
  }

  &.pivot {
    --bg-color: var(--pivot);

    & summary::after {
      content: url("svg/pivot.svg");
    }
  }

  &.question {
    --bg-color: var(--question);

    & summary::after {
      content: url("svg/question.svg");
    }
  }

  &.story {
    --bg-color: var(--story);

    & summary::after {
      content: url("svg/story.svg");
    }
  }

  &.tip {
    --bg-color: var(--tip);

    & summary::after {
      content: url("svg/tip.svg");
    }
  }

  &.tldr {
    --bg-color: var(--tldr);

    & summary::after {
      content: url("svg/tldr.svg");
    }
  }

  &.trouble {
    --bg-color: var(--trouble);

    & summary::after {
      content: url("svg/trouble.svg");
    }
  }

  &.warn {
    --bg-color: var(--warn);

    & summary::after {
      content: url("svg/warn.svg");
    }
  }

  /* Override prism for code inside a details element */
  :not(pre) > code[class*="language-"], pre[class*="language-"] {
    background: var(--lighter);
  }
}

/* PAGING // PAGING // PAGING // PAGING // PAGING // PAGING */

div.paging {
  position: absolute;
  width: calc(var(--size) * 3.6);
  margin-left: var(--pad);

  display: flex;

  input {
    position: absolute;
    left: -999px
  }

  /* Default display with transparent border... */
  label {
    width: var(--size);
    height: var(--size);
    background-color: var(--page-bg);
    /* margin-left: var(--pad); */
    margin-top: var(--pad);
    padding: var(--pad);
    border: 1px solid transparent;

    img {
      opacity: var(--dim)
    }

    /* ...and transparent background for selected option */
    &:has(:checked) {
      background-color: transparent;
    }

    /* Hide unselected options unless :hover */
    &:not(:has(:checked)) {
      cursor: pointer;
      display: none;
    }
  }

  &:hover {
    label {
      /* Show all options */
      display: block;
      border-color: var(--page-bg);

      /* Round the ends of the display */
      &:first-child {
        border-top-left-radius: var(--size);
        border-bottom-left-radius: var(--size);
      }
      &:last-child {
        border-top-right-radius: var(--size);
        border-bottom-right-radius: var(--size);
      }

      /* Highlight selected option */
      &:has(:checked) {
        border-color: white;
        img {
          opacity: 1;
        }
      }

      /* Show rollover on unselected options */
      &:not(:has(:checked)):hover {
        border-color: var(--hover);
        background-color: var(--hover);
      }
    }
  }
}

.skip {
  margin: -0.5em 0;
  text-align: center;
  background-color: #2d2d2d;
  font-size: 1rem;

  & * {
    color: var(--skip)
  }
}

details .skip {
  margin: -0.5em 0;
  text-align: center;
  background-color: var(--lighter);
  font-size: 1rem;

  & * {
    color: var(--skip)
  }
}

.no-margin * {
  margin: 1em 0;
}

iframe {
  margin: 2em auto;
  display: block;
  border: none;
}